进程是资源分配的最小单位，线程是CPU运行的最小单位
多进程和多线程的出现原因是CPU的运行速度太快了，内存读写的速度远远小于CPU执行的速度，CPU会留存大量的等待时间，为了充分利用这段等待时间，就有了多进程和多线程。
进程偏重于资源管理，进程管理的是程序运行的上下文，包括内存管理，环境变量，文件等，线程存在于进程中，多个线程共享同一个进程的上下文，因此在资源的使用上需要使用互斥锁，信号量。
进程和线程的概念存在于操作系统中，是CPU执行时间段的一种表示，只是线程的时间粒度更小。

CPU核数和多进程，多线程的关系
在单核CPU上，通过分时复用可以实现多进程和多线程，线程是操作系统调度的最小任务单位，即线程的执行是由操作系统决定的，程序本身无法决定。
在多核CPU上，一个核可以执行一个进程，进程不能跨核，但是线程可以跨核，并且通过超线程技术，一个核可以同时执行多个线程，一台计算机能够同时执行的线程数=物理CPU数量×CPU核数×超线程。

并行和并发的区别。
并行是同时执行，并发是同时存在
